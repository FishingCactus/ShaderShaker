
{
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float"},
        variable{"scalar_float"},
        variable
        {
            "scalar_float_with_value",
            float_literal{"0.5f"}
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float2"},
        variable{"vector2_float"},
        variable
        {
            "vector2_float_with_value",
            initial_value_table
            {
                float_literal{"0.5f"},
                float_literal{"1.0f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float3"},
        variable{"vector3_float"},
        variable
        {
            "vector3_float_with_value",
            initial_value_table
            {
                float_literal{"0.0f"},
                float_literal{"-1.0f"},
                float_literal{"-1.0f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4"},
        variable{"vector4_float"},
        variable
        {
            "vector4_float_with_value",
            initial_value_table
            {
                float_literal{"0.0f"},
                float_literal{"-1.0f"},
                float_literal{"-1.0f"},
                float_literal{"-2.5f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4x4"},
        variable{"matrix4_float"}
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"int"},
        variable{"scalar_int"},
        variable
        {
            "scalar_int_with_value",
            int_literal{"5"}
        }
    },
    variable_declaration
    {
        storage{"shared"},
        modifier{},
        type{"float"},
        variable{"shared_variable"}
    },
    variable_declaration
    {
        storage{},
        modifier{"const"},
        type{"int"},
        variable{"const_variable"}
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4"},
        variable{"vector4_float"},
        variable
        {
            "vector4_float_with_value",
            initial_value_table
            {
                float_literal{"0.0f"},
                float_literal{"-1.0f"},
                float_literal{"-1.0f"},
                float_literal{"-2.5f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float"},
        variable
        {
            "casting_test",
            cast
            {
                type{"float"},
                variable{"some_variable"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float"},
        variable
        {
            "boneWeights",
            size{"4"},
            cast
            {
                type
                {
                    "float",
                    size{"4"}
                },
                postfix
                {
                    variable{"input"},
                    variable{"BoneWeights"}
                }
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"bool"},
        variable
        {
            "ItUsesDiffuseColor",
            annotations
            {
                entry
                {
                    "string",
                    "UIName",
                    '"Use diffuse color"'
                }
            },
            bool_literal{"false"}
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4"},
        variable
        {
            "AmbientLightColor3DSMax",
            annotations
            {
                entry
                {
                    "string",
                    "UIWidget",
                    '"Color"'
                },
                entry
                {
                    "string",
                    "UIName",
                    '"3DSMax Global Lighting"'
                }
            },
            initial_value_table
            {
                float_literal{"0.047f"},
                float_literal{"0.047f"},
                float_literal{"0.07f"},
                float_literal{"1.0f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4"},
        variable
        {
            "AmbientLightColor3DSMax",
            semantic{"COLOR0"},
            annotations
            {
                entry
                {
                    "string",
                    "UIWidget",
                    '"Color"'
                },
                entry
                {
                    "string",
                    "UIName",
                    '"3DSMax Global Lighting"'
                }
            },
            initial_value_table
            {
                float_literal{"0.047f"},
                float_literal{"0.047f"},
                float_literal{"0.07f"},
                float_literal{"1.0f"}
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4x4"},
        variable
        {
            "WorldITXf",
            user_semantic{"WorldInverseTranspose"},
            annotations
            {
                entry
                {
                    "string",
                    "UIWidget",
                    '"None"'
                }
            }
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float4x3"},
        variable
        {
            "BoneTable",
            size{"64"}
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float"},
        variable
        {
            "Kr",
            annotations
            {
                entry
                {
                    "string",
                    "UIWidget",
                    '"slider"'
                },
                entry
                {
                    "string",
                    "UIName",
                    '"Reflection Strength"'
                },
                entry
                {
                    "float",
                    "UIMin",
                    float_literal{"0.0"}
                },
                entry
                {
                    "float",
                    "UIMax",
                    float_literal{"1.0"}
                },
                entry
                {
                    "float",
                    "UIStep",
                    float_literal{"0.01"}
                }
            },
            float_literal{"1.0"}
        }
    },
    texture_declaration
    {
        type{"texture2D"},
        "SpecularTexture",
        semantic{"DIFFUSE"},
        annotations
        {
            entry
            {
                "string",
                "ResourceName",
                '"default_color.dds"'
            },
            entry
            {
                "string",
                "UIName",
                '"Specular Texture"'
            },
            entry
            {
                "string",
                "ResourceType",
                '"2D"'
            }
        }
    },
    sampler_declaration
    {
        type{"sampler2D"},
        "SpecularTextureSampler",
        texture{"SpecularTexture"},
        parameter
        {
            "AddressU",
            "Wrap"
        },
        parameter
        {
            "AddressV",
            "Wrap"
        },
        parameter
        {
            "FILTER",
            "MIN_MAG_MIP_LINEAR"
        }
    },
    variable_declaration
    {
        storage{},
        modifier{},
        type{"float3"},
        variable
        {
            "Light1Position3DSMax",
            semantic{"POSITION"},
            annotations
            {
                entry
                {
                    "string",
                    "UIName",
                    '"Light 1 position"'
                },
                entry
                {
                    "string",
                    "Object",
                    '"PointLight"'
                },
                entry
                {
                    "string",
                    "Space",
                    '"World"'
                },
                entry
                {
                    "int",
                    "refID",
                    int_literal{"1"}
                }
            },
            initial_value_table
            {
                float_literal{"1.0"},
                float_literal{"0.0"},
                float_literal{"0.0"}
            }
        }
    },
    struct_definition
    {
        "LightStruct",
        field
        {
            type{"float3"},
            ID{"LightVector"}
        },
        field
        {
            type{"float4"},
            ID{"LightColor"}
        }
    },
    struct_definition
    {
        "VS_INPUT",
        field
        {
            type{"float3"},
            ID{"Position"},
            semantic{"POSITION"}
        },
        field
        {
            type{"int4"},
            ID{"BoneIndices"},
            semantic{"BLENDINDICES"}
        },
        field
        {
            type{"float4"},
            ID{"BoneWeights"},
            semantic{"BLENDWEIGHT"}
        },
        field
        {
            type{"float3"},
            ID{"Normal"},
            semantic{"NORMAL"}
        },
        field
        {
            type{"float3"},
            ID{"Tangent"},
            semantic{"TANGENT"}
        },
        field
        {
            type{"float3"},
            ID{"Binormal"},
            semantic{"BINORMAL"}
        },
        field
        {
            type{"float2"},
            ID{"DiffuseTexCoord0"},
            semantic{"TEXCOORD0"}
        },
        field
        {
            type{"float2"},
            ID{"DiffuseTexCoord1"},
            semantic{"TEXCOORD1"}
        },
        field
        {
            type{"float3"},
            ID{"Color"},
            semantic{"TEXCOORD2"}
        },
        field
        {
            type{"float3"},
            ID{"Color"},
            semantic{"COLOR0"}
        },
        field
        {
            type{"float3"},
            ID{"Color"},
            semantic{"VPOS"}
        }
    }
}